{"version":3,"sources":["redux/contacts/contacts-selectors.js","views/ContactsView/ContactsView.styles.js","components/ContactForm/ContactForm.styles.js","components/SpinnerTwo/SpinnerTwo.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styles.js","components/Filter/Filter.js","components/ContactList/ContactList.styles.js","components/ContactListElement/ContactListElement.styles.js","components/ContactListElement/ContactListElement.js","components/ContactList/ContactList.js","views/ContactsView/ContactsView.js"],"names":["getItems","state","contacts","items","getFilter","filter","getIsLoading","isLoading","getIsDeleting","isDeleting","getContactsArr","createSelector","item","name","toLowerCase","includes","number","Container","styled","div","Title","h1","TitleContacts","h2","Form","form","Input","input","Label","label","spin","keyframes","Spinner","ImSpinner","ContactForm","useState","setName","setNumber","useSelector","contactsSelectors","dispatch","useDispatch","handleInputChange","e","currentTarget","value","Error","resetFormInputs","showAlert","toast","icon","handleSubmit","a","preventDefault","normalizedName","contactExists","find","numberExists","contact","contactsOperations","fetchAddContact","success","onSubmit","onChange","type","autoComplete","pattern","title","required","Button","variant","color","SpinnerTwo","size","Wrapper","Filter","changeFilter","target","Ul","ul","Li","li","Div","Span","span","ContactListElement","contactId","contactName","contactNumber","isDel","setIsDel","IconButton","onClick","fetchDeleteContact","disabled","ContactList","contactsArr","map","id","ContactsView","useEffect","fetchContacts","length"],"mappings":"udAEaA,EAAW,SAACC,GAAD,OAAWA,EAAMC,SAASC,OACrCC,EAAY,SAACH,GAAD,OAAWA,EAAMC,SAASG,QACtCC,EAAe,SAACL,GAAD,OAAWA,EAAMC,SAASK,WACzCC,EAAgB,SAACP,GAAD,OAAWA,EAAMC,SAASO,YAE1CC,EAAiBC,YAC5B,CAACX,EAAUI,IACX,SAACD,EAAOE,GAAR,OACEF,EAAME,QACJ,SAACO,GAAD,OACEA,EAAKC,KAAKC,cAAcC,SAASV,EAAOS,gBACxCF,EAAKI,OAAOD,SAASV,S,0DCXhBY,EAAYC,IAAOC,IAAV,0GAOTC,EAAQF,IAAOG,GAAV,qLASLC,EAAgBJ,IAAOK,GAAV,mK,0CChBbC,EAAON,IAAOO,KAAV,8JAQJC,EAAQR,IAAOS,MAAV,0QAcLC,EAAQV,IAAOW,MAAV,kH,yBCpBZC,EAAOC,YAAH,yGAaKC,EAJC,YAAOC,IAAP,sBAAH,aACEH,EADF,2B,gBCyFEI,I,MAAAA,EA7Ff,WACE,MAAwBC,mBAAS,IAAjC,mBAAOtB,EAAP,KAAauB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOnB,EAAP,KAAeqB,EAAf,KACMlC,EAAQmC,YAAYC,EAAkBvC,UACtCO,EAAY+B,YAAYC,EAAkBjC,cAC1CkC,EAAWC,cAEXC,EAAoB,SAACC,GACzB,MAAwBA,EAAEC,cAAlB/B,EAAR,EAAQA,KAAMgC,EAAd,EAAcA,MAEd,OAAQhC,GACN,IAAK,OACH,OAAOuB,EAAQS,GAEjB,IAAK,SACH,OAAOR,EAAUQ,GAEnB,QACE,MAAM,IAAIC,MAAJ,mCAAsCjC,MAI5CkC,EAAkB,WACtBX,EAAQ,IACRC,EAAU,KAGNW,EAAY,SAACH,GACjBI,YAAM,GAAD,OAAIJ,EAAJ,2BAAoC,CACvCK,KAAM,cAAC,IAAD,OAIJC,EAAY,uCAAG,WAAOR,GAAP,mBAAAS,EAAA,yDACnBT,EAAEU,iBACIC,EAAiBzC,EAAKC,cACtByC,EAAgBpD,EAAMqD,MAC1B,qBAAG3C,KAAgBC,gBAAkBwC,KAEjCG,EAAetD,EAAMqD,MAAK,SAACE,GAAD,OAAaA,EAAQ1C,SAAWA,MAE5DuC,EARe,uBASjBP,EAAUnC,GACVkC,IAViB,8BAcfU,EAde,wBAejBT,EAAUhC,GACV+B,IAhBiB,2BAoBnBP,EAASmB,EAAmBC,gBAAgB,CAAE/C,OAAMG,YACpDiC,IAAMY,QAAN,UAAiBhD,EAAjB,0CACAkC,IAtBmB,4CAAH,sDAyBlB,OACE,eAACvB,EAAD,CAAMsC,SAAUX,EAAhB,UACE,eAACvB,EAAD,kBAEE,cAACF,EAAD,CACEqC,SAAUrB,EACVsB,KAAK,OACLnD,KAAK,OACLoD,aAAa,MACbpB,MAAOhC,EACPqD,QAAQ,yHACRC,MAAM,2KACNC,UAAQ,OAGZ,eAACxC,EAAD,oBAEE,cAACF,EAAD,CACEqC,SAAUrB,EACVsB,KAAK,MACLnD,KAAK,SACLoD,aAAa,MACbpB,MAAO7B,EACPkD,QAAQ,yFACRC,MAAM,4GACNC,UAAQ,OAGZ,cAACC,EAAA,EAAD,CAAQL,KAAK,SAASM,QAAQ,YAAYC,MAAM,UAAhD,SACGhE,EAAY,cAACiE,EAAD,CAAYC,KAAM,KAAS,oBC9FnC/C,EAAQR,IAAOS,MAAV,kSAeLC,EAAQV,IAAOW,MAAV,mEAKL6C,EAAUxD,IAAOC,IAAV,gECDLwD,I,SAAAA,GAjBf,WACE,IAAMnC,EAAWC,cAEjB,OACE,cAACiC,EAAD,UACE,eAAC,EAAD,8CAEE,cAAC,EAAD,CACEX,SAAU,SAACpB,GAAD,OAAOH,EAASoC,YAAajC,EAAEkC,OAAOhC,SAChDmB,KAAK,OACLnD,KAAK,iBCZFiE,GAAK5D,IAAO6D,GAAV,wG,UCAFC,GAAK9D,IAAO+D,GAAV,oIAOFC,GAAMhE,IAAOC,IAAV,kDAGHgE,GAAOjE,IAAOkE,KAAV,qD,+BCiCFC,OAjCf,YAAwE,IAA1CC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,cAC9C/E,EAAa6B,YAAYC,EAAkB/B,eAC3CgC,EAAWC,cACjB,EAA0BN,mBAAS1B,GAAnC,mBAAOgF,EAAP,KAAcC,EAAd,KAUA,OACE,eAACV,GAAD,WACE,cAACG,GAAD,UACE,cAAC,IAAD,MAFJ,UAIMI,EAJN,aAIsBC,GACpB,cAACN,GAAD,UACE,cAACS,GAAA,EAAD,CACE3B,KAAK,SACL4B,QAjBW,WACjBpD,EAASmB,EAAmBkC,mBAAmBP,IAC/CI,GAAS,GACTzC,YAAM,GAAD,OAAIsC,EAAJ,eAA8B,CACjCrC,KAAM,cAAC,KAAD,OAcF4C,SAAUrF,EACV,aAAW,SAJb,SAMGgF,EAAQ,cAACjB,EAAD,CAAYC,KAAM,KAAS,cAAC,KAAD,YCd/BsB,OAnBf,WACE,IAAMC,EAAc1D,YAAYC,EAAkB7B,gBAElD,OACE,cAACoE,GAAD,UACGkB,EAAYC,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIrF,EAAmB,EAAnBA,KAAMG,EAAa,EAAbA,OAC5B,OACE,cAAC,GAAD,CAEEsE,UAAWY,EACXX,YAAa1E,EACb2E,cAAexE,GAHVkF,S,SCDF,SAASC,KACtB,IAAMjG,EAAWoC,YAAYC,EAAkBvC,UACzCwC,EAAWC,cAIjB,OAFA2D,qBAAU,kBAAM5D,EAASmB,EAAmB0C,mBAAkB,CAAC7D,IAG7D,eAACvB,EAAD,WACE,eAACG,EAAD,WACE,cAAC,IAAD,IADF,gBAGA,cAAC,EAAD,IACClB,EAASoG,OAAS,EACjB,qCACE,eAAChF,EAAD,WACE,cAAC,IAAD,IADF,cAIA,cAAC,GAAD,IACA,cAAC,GAAD,OAGF,cAAC,KAAD,IAEF,cAAC,IAAD","file":"static/js/contacts-view.cb5e429c.chunk.js","sourcesContent":["import { createSelector } from 'reselect'\n\nexport const getItems = (state) => state.contacts.items\nexport const getFilter = (state) => state.contacts.filter\nexport const getIsLoading = (state) => state.contacts.isLoading\nexport const getIsDeleting = (state) => state.contacts.isDeleting\n\nexport const getContactsArr = createSelector(\n  [getItems, getFilter],\n  (items, filter) =>\n    items.filter(\n      (item) =>\n        item.name.toLowerCase().includes(filter.toLowerCase()) ||\n        item.number.includes(filter),\n    ),\n)\n","import styled from '@emotion/styled'\n\nexport const Container = styled.div`\n  height: 100vh;\n  margin: 0 auto;\n  text-align: center;\n  padding: 20px;\n`\n\nexport const Title = styled.h1`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0px;\n  margin-bottom: 25px;\n  font-size: 56px;\n  color: #000000;\n`\nexport const TitleContacts = styled.h2`\n  display: flex;\n  align-items: center;\n  margin: 0px auto 20px;\n  justify-content: center;\n  font-size: 40px;\n  color: #000000;\n`\n","import styled from '@emotion/styled'\n\nexport const Form = styled.form`\n  width: 500px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin: 0px auto 20px;\n  padding: 10px;\n`\nexport const Input = styled.input`\n  min-width: 478px;\n  height: 40px;\n  padding: 8px 10px;\n  font-size: 24px;\n  border: 2px solid #000000;\n  border-radius: 4px;\n  transition: border 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #3f51b5;\n  }\n`\nexport const Label = styled.label`\n  margin-bottom: 30px;\n\n  color: #000000;\n  font-size: 20px;\n  text-align: left;\n`\n","import styled from '@emotion/styled/macro'\nimport { keyframes } from '@emotion/react'\nimport { ImSpinner } from 'react-icons/im'\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(1turn);\n}\n`\n\nconst Spinner = styled(ImSpinner)`\n  animation: ${spin} 0.85s linear infinite;\n`\n\nexport default Spinner\n","import { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { contactsOperations, contactsSelectors } from 'redux/contacts'\nimport { GiButterflyWarning } from 'react-icons/gi'\nimport { Form, Label, Input } from './ContactForm.styles'\nimport toast from 'react-hot-toast'\nimport SpinnerTwo from 'components/SpinnerTwo'\nimport Button from '@material-ui/core/Button'\n\nfunction ContactForm() {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n  const items = useSelector(contactsSelectors.getItems)\n  const isLoading = useSelector(contactsSelectors.getIsLoading)\n  const dispatch = useDispatch()\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.currentTarget\n\n    switch (name) {\n      case 'name':\n        return setName(value)\n\n      case 'number':\n        return setNumber(value)\n\n      default:\n        throw new Error(`there is no such name as ${name}`)\n    }\n  }\n\n  const resetFormInputs = () => {\n    setName('')\n    setNumber('')\n  }\n\n  const showAlert = (value) => {\n    toast(`${value} is already in contacts`, {\n      icon: <GiButterflyWarning />,\n    })\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const normalizedName = name.toLowerCase()\n    const contactExists = items.find(\n      ({ name }) => name.toLowerCase() === normalizedName,\n    )\n    const numberExists = items.find((contact) => contact.number === number)\n\n    if (contactExists) {\n      showAlert(name)\n      resetFormInputs()\n      return\n    }\n\n    if (numberExists) {\n      showAlert(number)\n      resetFormInputs()\n      return\n    }\n\n    dispatch(contactsOperations.fetchAddContact({ name, number }))\n    toast.success(`${name} has been added to your contacts list`)\n    resetFormInputs()\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <Label>\n        Name\n        <Input\n          onChange={handleInputChange}\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"The name can only consist of letters, apostrophes, dashes and spaces. For example: Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          onChange={handleInputChange}\n          type=\"tel\"\n          name=\"number\"\n          autoComplete=\"off\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"The phone number must consist of numbers and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n      <Button type=\"submit\" variant=\"contained\" color=\"primary\">\n        {isLoading ? <SpinnerTwo size={34} /> : 'Add contact'}\n      </Button>\n    </Form>\n  )\n}\n\nexport default ContactForm\n","import styled from '@emotion/styled'\n\nexport const Input = styled.input`\n  min-width: 478px;\n  height: 40px;\n  padding: 8px 10px;\n  margin-bottom: 50px;\n  font-size: 24px;\n  border: 2px solid #000000;\n  border-radius: 4px;\n  transition: border 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #3f51b5;\n  }\n`\nexport const Label = styled.label`\n  color: #000000;\n  font-size: 20px;\n`\n\nexport const Wrapper = styled.div`\n  margin: 0 auto;\n  width: 500px;\n`\n","import { useDispatch } from 'react-redux'\nimport { changeFilter } from '../../redux/contacts/contacts-slice'\nimport { Label, Input, Wrapper } from './Filter.styles'\n\nfunction Filter() {\n  const dispatch = useDispatch()\n\n  return (\n    <Wrapper>\n      <Label>\n        Find contacts by name or number:\n        <Input\n          onChange={(e) => dispatch(changeFilter(e.target.value))}\n          type=\"text\"\n          name=\"filter\"\n        ></Input>\n      </Label>\n    </Wrapper>\n  )\n}\n\nexport default Filter\n","import styled from '@emotion/styled'\n\nexport const Ul = styled.ul`\n  margin: 0 auto;\n  max-width: 600px;\n  padding: 0;\n  list-style: none;\n`\n","import styled from '@emotion/styled'\n\nexport const Li = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 4px;\n  color: #000000;\n  font-size: 18px;\n`\nexport const Div = styled.div`\n  margin-left: auto;\n`\nexport const Span = styled.span`\n  margin-right: 10px;\n`\n","import { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { contactsSelectors, contactsOperations } from 'redux/contacts'\nimport { IoIosContact } from 'react-icons/io'\nimport { AiOutlineUserDelete } from 'react-icons/ai'\nimport { Li, Div, Span } from './ContactListElement.styles'\nimport SpinnerTwo from 'components/SpinnerTwo'\nimport PropTypes from 'prop-types'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport toast from 'react-hot-toast'\n\nfunction ContactListElement({ contactId, contactName, contactNumber }) {\n  const isDeleting = useSelector(contactsSelectors.getIsDeleting)\n  const dispatch = useDispatch()\n  const [isDel, setIsDel] = useState(isDeleting)\n\n  const removeItem = () => {\n    dispatch(contactsOperations.fetchDeleteContact(contactId))\n    setIsDel(true)\n    toast(`${contactName} is deleted`, {\n      icon: <AiOutlineUserDelete />,\n    })\n  }\n\n  return (\n    <Li>\n      <Span>\n        <IoIosContact />\n      </Span>\n      {`${contactName}: ${contactNumber}`}\n      <Div>\n        <IconButton\n          type=\"button\"\n          onClick={removeItem}\n          disabled={isDeleting}\n          aria-label=\"delete\"\n        >\n          {isDel ? <SpinnerTwo size={34} /> : <DeleteIcon />}\n        </IconButton>\n      </Div>\n    </Li>\n  )\n}\n\nexport default ContactListElement\n\nContactListElement.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n}\n","import { useSelector } from 'react-redux'\nimport { Ul } from './ContactList.styles'\nimport { contactsSelectors } from 'redux/contacts'\nimport ContactListElement from '../ContactListElement'\n\nfunction ContactList() {\n  const contactsArr = useSelector(contactsSelectors.getContactsArr)\n\n  return (\n    <Ul>\n      {contactsArr.map(({ id, name, number }) => {\n        return (\n          <ContactListElement\n            key={id}\n            contactId={id}\n            contactName={name}\n            contactNumber={number}\n          />\n        )\n      })}\n    </Ul>\n  )\n}\n\nexport default ContactList\n","import { useSelector, useDispatch } from 'react-redux'\nimport { contactsSelectors, contactsOperations } from 'redux/contacts'\nimport { useEffect } from 'react'\nimport { TiContacts } from 'react-icons/ti'\nimport { IoIosContacts } from 'react-icons/io'\nimport { Toaster } from 'react-hot-toast'\nimport { Container, Title, TitleContacts } from './ContactsView.styles'\nimport ContactForm from 'components/ContactForm'\nimport Filter from 'components/Filter'\nimport ContactList from 'components/ContactList'\nimport Spinner from 'components/Spinner'\n\nexport default function ContactsView() {\n  const contacts = useSelector(contactsSelectors.getItems)\n  const dispatch = useDispatch()\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch])\n\n  return (\n    <Container>\n      <Title>\n        <TiContacts /> Phonebook\n      </Title>\n      <ContactForm />\n      {contacts.length > 0 ? (\n        <>\n          <TitleContacts>\n            <IoIosContacts />\n            Contacts\n          </TitleContacts>\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <Spinner />\n      )}\n      <Toaster />\n    </Container>\n  )\n}\n"],"sourceRoot":""}
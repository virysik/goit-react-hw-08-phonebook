{"version":3,"sources":["components/Navigation/Navigation.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","redux/auth/auth-slice.js","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","views/HomeView/HomeView.js","views/SignUpView/SignUpView.js","views/LoginView/LoginView.js","views/ContactsView/ContactsView.styles.js","services/contacts-api.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-slice.js","components/ContactForm/ContactForm.styles.js","components/SpinnerTwo/SpinnerTwo.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styles.js","components/Filter/Filter.js","components/ContactList/ContactList.styles.js","components/ContactListElement/ContactListElement.styles.js","components/ContactListElement/ContactListElement.js","components/ContactList/ContactList.js","components/Spinner/Spinner.js","views/ContactsView/ContactsView.js","App.js","redux/store.js","index.js"],"names":["Navigation","to","exact","axios","defaults","baseURL","token","headers","common","Authorization","register","createAsyncThunk","credentials","a","post","data","toast","message","logIn","logOut","fetchCurrentUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","operations","getIsLoggedIn","isLoggedIn","getUserName","user","name","getToken","authSlice","createSlice","initialState","email","extraReducers","authOperations","fulfilled","action","payload","UserMenu","dispatch","useDispatch","useSelector","authSelectors","type","onClick","AuthNav","styles","header","margin","display","justifyContent","alignItems","borderBottom","AppBar","style","HomeView","SignUpView","useState","setName","setEmail","password","setPassword","handleChange","target","value","onSubmit","e","preventDefault","autoComplete","onChange","LoginView","Container","styled","div","Title","h1","TitleContacts","h2","fetchContactsApi","fetchPostNewContact","contact","removeContactById","id","delete","updateContactById","patch","fetchContacts","contacts","console","log","fetchAddContact","fetchDeleteContact","fetchUpdateContact","getItems","items","getFilter","filter","getIsLoading","isLoading","getContactsArr","createSelector","item","toLowerCase","includes","number","loading","error","contactsSlice","status","reducers","changeFilter","pending","rejected","actions","Form","form","Input","input","Label","label","Button","button","spin","keyframes","Spinner","CgSpinner","ContactForm","setNumber","contactsSelectors","handleInputChange","currentTarget","Error","resetFormInputs","showAlert","color","icon","handleSubmit","normalizedName","contactExists","find","numberExists","contactsOperations","pattern","title","required","disabled","SpinnerTwo","size","Filter","Ul","ul","Li","li","Span","span","ContactListElement","contactId","contactName","contactNumber","onDelete","ContactList","contactsArr","map","height","width","timeout","ContactsView","useEffect","length","App","path","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","thunk","authPersistConfig","key","storage","whiteList","store","configureStore","reducer","persistReducer","authReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed687a29.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom'\nexport default function Navigation() {\n  return (\n    <nav>\n      <ul>\n        <NavLink to=\"/\" exact>\n          MainPage\n        </NavLink>\n        <NavLink to=\"/contacts\">Contacts</NavLink>\n      </ul>\n    </nav>\n  )\n}\n","import axios from 'axios'\nimport { createAsyncThunk } from '@reduxjs/toolkit'\nimport toast from 'react-hot-toast'\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com'\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = ''\n  },\n}\n\nexport const register = createAsyncThunk(\n  'auth/register',\n  async (credentials) => {\n    try {\n      const { data } = await axios.post('/users/signup', credentials)\n      token.set(data.token)\n      return data\n    } catch (error) {\n      toast('Error occured: ', error.message)\n    }\n  },\n)\n\nexport const logIn = createAsyncThunk('auth/login', async (credentials) => {\n  try {\n    const { data } = await axios.post('/users/login', credentials)\n    token.set(data.token)\n    return data\n  } catch (error) {\n    toast('Error occured: ', error.message)\n  }\n})\n\nexport const logOut = createAsyncThunk('auth/logout', async () => {\n  try {\n    await axios.post('/users/logout')\n    token.unset()\n  } catch (error) {\n    toast('Error occured: ', error.message)\n  }\n})\n\nexport const fetchCurrentUser = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState()\n    const persistedToken = state.auth.token\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue()\n    }\n\n    token.set(persistedToken)\n    try {\n      const { data } = await axios.get('/users/current')\n      return data\n    } catch (error) {\n      toast('Error occured: ', error.message)\n    }\n  },\n)\n\nconst operations = {\n  register,\n  logOut,\n  logIn,\n  fetchCurrentUser,\n}\nexport default operations\n","export const getIsLoggedIn = (state) => state.auth.isLoggedIn\n\nexport const getUserName = (state) => state.auth.user.name\n\nexport const getToken = (state) => state.auth.token\n","import { createSlice } from '@reduxjs/toolkit'\nimport { authOperations } from '.'\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n}\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  extraReducers: {\n    [authOperations.register.fulfilled](state, action) {\n      state.user = action.payload.user\n      state.token = action.payload.token\n      state.isLoggedIn = true\n    },\n    [authOperations.logIn.fulfilled](state, action) {\n      state.user = action.payload.user\n      state.token = action.payload.token\n      state.isLoggedIn = true\n    },\n    [authOperations.logOut.fulfilled](state, action) {\n      state.user = { name: null, email: null }\n      state.token = null\n      state.isLoggedIn = false\n    },\n    [authOperations.fetchCurrentUser.fulfilled](state, action) {\n      state.user = action.payload\n      state.isLoggedIn = true\n    },\n  },\n})\n\nexport default authSlice.reducer\n","import { authSelectors, authOperations } from 'redux/auth'\n\nimport { useDispatch, useSelector } from 'react-redux'\n\nexport default function UserMenu() {\n  const dispatch = useDispatch()\n  const name = useSelector(authSelectors.getUserName)\n\n  return (\n    <div>\n      <h2>Welcome, {name}</h2>\n      <button type=\"button\" onClick={() => dispatch(authOperations.logOut())}>\n        LogOut\n      </button>\n    </div>\n  )\n}\n","import { NavLink } from 'react-router-dom'\n\nexport default function AuthNav() {\n  return (\n    <ul>\n      <NavLink to=\"/users/login\">Login</NavLink>\n      <NavLink to=\"/users/signup\">SignUp</NavLink>\n    </ul>\n  )\n}\n","import Navigation from 'components/Navigation'\nimport UserMenu from 'components/UserMenu'\nimport AuthNav from 'components/AuthNav'\nimport { authSelectors } from 'redux/auth'\nimport { useSelector } from 'react-redux'\n\nconst styles = {\n  header: {\n    margin: '0px 30px',\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n}\n\nexport default function AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsLoggedIn)\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}\n    </header>\n  )\n}\n","export default function HomeView() {\n  return <h1>Welcome to our Phonebook service 🖐🏻 </h1>\n}\n","import { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { authOperations } from 'redux/auth'\n\nexport default function SignUpView() {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'name':\n        return setName(value)\n      case 'email':\n        return setEmail(value)\n      case 'password':\n        return setPassword(value)\n      default:\n        return\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    dispatch(authOperations.register({ name, email, password }))\n    setName('')\n    setEmail('')\n    setPassword('')\n  }\n\n  return (\n    <form onSubmit={handleSubmit} autoComplete=\"off\">\n      <label>\n        Please enter your name\n        <input onChange={handleChange} type=\"text\" name=\"name\" value={name} />\n      </label>\n      <label>\n        Please enter your email\n        <input\n          onChange={handleChange}\n          type=\"email\"\n          name=\"email\"\n          value={email}\n        />\n      </label>\n      <label>\n        Please enter your password\n        <input\n          onChange={handleChange}\n          type=\"password\"\n          name=\"password\"\n          value={password}\n        />\n      </label>\n      <button type=\"submit\">SignUp</button>\n    </form>\n  )\n}\n","import { useState } from 'react'\n\nimport { authOperations } from 'redux/auth'\nimport { useDispatch } from 'react-redux'\n\nexport default function LoginView() {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const dispatch = useDispatch()\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value)\n      case 'password':\n        return setPassword(value)\n      default:\n        return\n    }\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    dispatch(authOperations.logIn({ email, password }))\n    setEmail('')\n    setPassword('')\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Please enter your email\n        <input\n          onChange={handleChange}\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          autoComplete=\"off\"\n        />\n      </label>\n      <label>\n        Please enter your password\n        <input\n          onChange={handleChange}\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          autoComplete=\"off\"\n        />\n      </label>\n      <button type=\"submit\">Login</button>\n    </form>\n  )\n}\n","import styled from \"@emotion/styled\";\n\nexport const Container = styled.div`\n  margin-top: 20px;\n  margin-left: 20px;\n  padding: 20px;\n  width: 420px;\n  background: #f2f2f0;\n  border: 4px double #1b3c59;\n  border-radius: 36px;\n  box-shadow: 4px 3px 20px rgba(27, 60, 89, 0.2);\n`;\n\nexport const Title = styled.h1`\n  display: flex;\n  align-items: center;\n  margin-top: 0px;\n  margin-bottom: 25px;\n  font-size: 40px;\n  color: #456173;\n`;\nexport const TitleContacts = styled.h2`\n  display: flex;\n  align-items: center;\n  margin-top: 0px;\n  margin-bottom: 25px;\n  font-size: 30px;\n  color: #456173;\n`;\n","import axios from 'axios'\n\nexport const fetchContactsApi = async () => {\n  const { data } = await axios.get('/contacts')\n  return data\n}\n\nexport const fetchPostNewContact = async (contact) => {\n  const { data } = await axios.post('/contacts', contact)\n  return data\n}\n\nexport const removeContactById = async (id) => {\n  await axios.delete(`/contacts/${id}`)\n  return id\n}\n\nexport const updateContactById = async (id) => {\n  const { data } = await axios.patch(`/contacts/${id}`)\n  return data\n}\n","import { createAsyncThunk } from '@reduxjs/toolkit'\nimport {\n  fetchContactsApi,\n  fetchPostNewContact,\n  removeContactById,\n  updateContactById,\n} from '../../services/contacts-api'\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n  async () => {\n    try {\n      const contacts = await fetchContactsApi()\n      return contacts\n    } catch (error) {\n      console.log(error)\n    }\n  },\n)\n\nexport const fetchAddContact = createAsyncThunk(\n  'contacts/addContact',\n  async (contact) => {\n    try {\n      const contacts = await fetchPostNewContact(contact)\n      return contacts\n    } catch (error) {\n      console.log(error)\n    }\n  },\n)\n\nexport const fetchDeleteContact = createAsyncThunk(\n  'contacts/deleteContact',\n  async (id) => {\n    try {\n      const contacts = await removeContactById(id)\n      return contacts\n    } catch (error) {\n      console.log(error)\n    }\n  },\n)\n\nexport const fetchUpdateContact = createAsyncThunk(\n  'contacts/updateContact',\n  async (id) => {\n    try {\n      const contacts = await updateContactById(id)\n      return contacts\n    } catch (error) {\n      console.log(error)\n    }\n  },\n)\n","import { createSelector } from 'reselect'\n\nexport const getItems = (state) => state.contacts.items\nexport const getFilter = (state) => state.contacts.filter\nexport const getIsLoading = (state) => state.contacts.isLoading\n\nexport const getContactsArr = createSelector(\n  [getItems, getFilter],\n  (items, filter) =>\n    items.filter(\n      (item) =>\n        item.name.toLowerCase().includes(filter.toLowerCase()) ||\n        item.number.includes(filter),\n    ),\n)\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  fetchContacts,\n  fetchAddContact,\n  fetchDeleteContact,\n} from './contacts-operations'\n\nconst initialState = {\n  items: [],\n  filter: '',\n  status: null,\n  isLoading: false,\n  error: null,\n}\n\nconst loading = 'Loading'\nconst error = 'Error'\n\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    changeFilter: (state, action) => {\n      state.filter = action.payload\n    },\n  },\n\n  extraReducers: {\n    [fetchContacts.fulfilled]: (state, action) => {\n      state.items = action.payload\n      state.status = null\n      state.error = null\n    },\n    [fetchContacts.pending]: (state) => {\n      state.status = loading\n      state.error = null\n    },\n    [fetchContacts.rejected]: (state) => {\n      state.status = null\n      state.error = error\n    },\n    [fetchAddContact.fulfilled]: (state, action) => {\n      state.items = [...state.items, action.payload]\n      state.status = null\n      state.error = null\n      state.isLoading = false\n    },\n    [fetchAddContact.pending]: (state) => {\n      state.status = loading\n      state.error = null\n      state.isLoading = true\n    },\n    [fetchAddContact.rejected]: (state) => {\n      state.status = null\n      state.error = error\n      state.isLoading = false\n    },\n    [fetchDeleteContact.fulfilled]: (state, action) => {\n      state.items = state.items.filter((item) => item.id !== action.payload)\n      state.status = null\n      state.error = null\n    },\n    [fetchDeleteContact.pending]: (state) => {\n      state.status = loading\n      state.error = null\n    },\n    [fetchDeleteContact.rejected]: (state) => {\n      state.status = null\n      state.error = error\n    },\n  },\n})\n\nexport const { changeFilter } = contactsSlice.actions\nexport default contactsSlice.reducer\n","import styled from '@emotion/styled'\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 25px;\n  padding: 10px;\n  border: 2px dashed #456173;\n`\nexport const Input = styled.input`\n  position: absolute;\n  top: 30px;\n  left: 0px;\n  min-width: 200px;\n  height: 20px;\n  padding: 4px 10px;\n  border: 2px solid #1b3c59;\n  border-radius: 2px;\n  transition: border 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #11bfae;\n  }\n`\nexport const Label = styled.label`\n  position: relative;\n  margin-bottom: 42px;\n  color: #1b3c59;\n  font-size: 20px;\n`\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n\n  margin-top: 20px;\n  margin-bottom: 10px;\n  padding: 6px 8px;\n  width: 130px;\n\n  font-size: 18px;\n  font-weight: 700;\n  color: #f2f2f0;\n  background-color: #11bfae;\n  border-radius: 4px;\n  border: transparent;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    color: #11bfae;\n    background-color: #456173;\n  }\n`\n","import styled from '@emotion/styled/macro'\nimport { keyframes } from '@emotion/react'\nimport { CgSpinner } from 'react-icons/cg'\n\nconst spin = keyframes`\n0% {\n  transform: rotate(0deg);\n}\n100% {\n  transform: rotate(1turn);\n}\n`\n\nconst Spinner = styled(CgSpinner)`\n  animation: ${spin} 0.85s linear infinite;\n`\n\nexport default Spinner\n","import { useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { contactsOperations, contactsSelectors } from 'redux/contacts'\nimport { Form, Label, Input, Button } from './ContactForm.styles'\nimport { GiButterflyWarning } from 'react-icons/gi'\nimport toast from 'react-hot-toast'\nimport SpinnerTwo from 'components/SpinnerTwo'\n\nfunction ContactForm() {\n  const [name, setName] = useState('')\n  const [number, setNumber] = useState('')\n  const items = useSelector(contactsSelectors.getItems)\n  const dispatch = useDispatch()\n  const isLoading = useSelector(contactsSelectors.getIsLoading)\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.currentTarget\n\n    switch (name) {\n      case 'name':\n        return setName(value)\n\n      case 'number':\n        return setNumber(value)\n\n      default:\n        throw new Error(`there is no such name as ${name}`)\n    }\n  }\n\n  const resetFormInputs = () => {\n    setName('')\n    setNumber('')\n  }\n\n  const showAlert = (value) => {\n    toast(`${value} is already in contacts`, {\n      style: { color: '#456173' },\n      icon: <GiButterflyWarning />,\n    })\n  }\n\n  const handleSubmit = async (e) => {\n    e.preventDefault()\n    const normalizedName = name.toLowerCase()\n    const contactExists = items.find(\n      ({ name }) => name.toLowerCase() === normalizedName,\n    )\n    const numberExists = items.find((contact) => contact.number === number)\n\n    if (contactExists) {\n      showAlert(name)\n      resetFormInputs()\n      return\n    }\n\n    if (numberExists) {\n      showAlert(number)\n      resetFormInputs()\n      return\n    }\n\n    dispatch(contactsOperations.fetchAddContact({ name, number }))\n    resetFormInputs()\n  }\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <>\n        <Label>\n          Name\n          <Input\n            onChange={handleInputChange}\n            type=\"text\"\n            name=\"name\"\n            autoComplete=\"off\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n          />\n        </Label>\n        <Label>\n          Number\n          <Input\n            onChange={handleInputChange}\n            type=\"tel\"\n            name=\"number\"\n            autoComplete=\"off\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n          />\n        </Label>\n        <Button type=\"submit\" disabled={isLoading}>\n          {isLoading ? (\n            <>\n              <SpinnerTwo size={18} />\n              Adding...\n            </>\n          ) : (\n            'Add contact'\n          )}\n        </Button>\n      </>\n    </Form>\n  )\n}\n\nexport default ContactForm\n","import styled from \"@emotion/styled\";\n\nexport const Input = styled.input`\n  position: absolute;\n  top: 30px;\n  left: 0px;\n  min-width: 200px;\n  height: 20px;\n  padding: 4px 10px;\n  border: 2px solid #1b3c59;\n  border-radius: 2px;\n  transition: border 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    border: 2px solid #11bfae;\n  }\n`;\nexport const Label = styled.label`\n  position: relative;\n  margin-bottom: 50px;\n  color: #1b3c59;\n  font-size: 20px;\n`;\n","import { useDispatch } from 'react-redux'\nimport { changeFilter } from '../../redux/contacts/contacts-slice'\nimport { Label, Input } from './Filter.styles'\n\nfunction Filter() {\n  const dispatch = useDispatch()\n\n  return (\n    <Label>\n      Find contacts by name:\n      <Input\n        onChange={(e) => dispatch(changeFilter(e.target.value))}\n        type=\"text\"\n        name=\"filter\"\n      ></Input>\n    </Label>\n  )\n}\n\nexport default Filter\n","import styled from \"@emotion/styled\";\n\nexport const Ul = styled.ul`\n  margin: 0;\n  margin-top: 56px;\n  padding: 0;\n  list-style: none;\n`;\n","import styled from '@emotion/styled'\n\nexport const Li = styled.li`\n  display: flex;\n  align-items: center;\n\n  margin-bottom: 4px;\n  color: #1b3c59;\n  font-size: 18px;\n`\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n\n  margin-left: auto;\n  padding: 6px;\n\n  font-size: 14px;\n  font-weight: 700;\n  color: #f2f2f0;\n  background-color: #1b3c59;\n  border-radius: 4px;\n  border: transparent;\n  cursor: pointer;\n  transition: all 250ms ease-in-out;\n\n  &:hover,\n  &:focus {\n    background-color: #456173;\n  }\n`\nexport const Span = styled.span`\n  margin-right: 20px;\n`\n","import { Li, Button, Span } from './ContactListElement.styles'\nimport { IoIosContact } from 'react-icons/io'\nimport { FaTrashAlt } from 'react-icons/fa'\nimport { useSelector } from 'react-redux'\nimport { contactsSelectors } from 'redux/contacts'\nimport SpinnerTwo from 'components/SpinnerTwo'\nimport PropTypes from 'prop-types'\n\nfunction ContactListElement({\n  contactId,\n  contactName,\n  contactNumber,\n  onDelete,\n}) {\n  const isLoading = useSelector(contactsSelectors.getIsLoading)\n\n  return (\n    <Li>\n      <Span>\n        <IoIosContact />\n      </Span>\n      {`${contactName}: ${contactNumber}`}\n      <Button\n        type=\"button\"\n        onClick={() => onDelete(contactId)}\n        disabled={isLoading}\n      >\n        {isLoading ? <SpinnerTwo size={14} /> : <FaTrashAlt />}\n      </Button>\n    </Li>\n  )\n}\n\nexport default ContactListElement\n\nContactListElement.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  contactName: PropTypes.string.isRequired,\n  contactNumber: PropTypes.string.isRequired,\n  onDelete: PropTypes.func.isRequired,\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { Ul } from './ContactList.styles'\nimport { contactsOperations, contactsSelectors } from 'redux/contacts'\nimport ContactListElement from '../ContactListElement'\n\nfunction ContactList() {\n  const contactsArr = useSelector(contactsSelectors.getContactsArr)\n  const dispatch = useDispatch()\n\n  return (\n    <Ul>\n      {contactsArr.map(({ id, name, number }) => {\n        return (\n          <ContactListElement\n            key={id}\n            contactId={id}\n            contactName={name}\n            contactNumber={number}\n            onDelete={() => dispatch(contactsOperations.fetchDeleteContact(id))}\n          />\n        )\n      })}\n    </Ul>\n  )\n}\n\nexport default ContactList\n","import Loader from 'react-loader-spinner'\n\nexport default function Spinner() {\n  return (\n    <Loader\n      type=\"ThreeDots\"\n      color=\"#456173\"\n      height={100}\n      width={100}\n      timeout={1000}\n    />\n  )\n}\n","import { Container, Title, TitleContacts } from './ContactsView.styles'\nimport { TiContacts } from 'react-icons/ti'\nimport { IoIosContacts } from 'react-icons/io'\nimport { Toaster } from 'react-hot-toast'\nimport ContactForm from 'components/ContactForm'\nimport Filter from 'components/Filter'\nimport ContactList from 'components/ContactList'\nimport Spinner from 'components/Spinner'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { contactsSelectors, contactsOperations } from 'redux/contacts'\nimport { useEffect } from 'react'\n\nexport default function ContactsView() {\n  const contacts = useSelector(contactsSelectors.getItems)\n  const dispatch = useDispatch()\n\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch])\n\n  return (\n    <>\n      <Container>\n        <Title>\n          <TiContacts /> Phonebook\n        </Title>\n        <ContactForm />\n        {contacts.length > 0 ? (\n          <>\n            <TitleContacts>\n              <IoIosContacts />\n              Contacts\n            </TitleContacts>\n            <Filter />\n            <ContactList />\n          </>\n        ) : (\n          <Spinner />\n        )}\n        <Toaster />\n      </Container>\n    </>\n  )\n}\n","import AppBar from 'components/AppBar'\nimport { Switch, Route, Redirect } from 'react-router-dom'\nimport { useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { authOperations } from 'redux/auth'\nimport HomeView from 'views/HomeView'\nimport SignUpView from 'views/SignUpView'\nimport LoginView from 'views/LoginView'\nimport ContactsView from 'views/ContactsView'\n\nfunction App() {\n  const dispatch = useDispatch()\n  useEffect(() => {\n    dispatch(authOperations.fetchCurrentUser())\n  }, [dispatch])\n  return (\n    <>\n      <AppBar />\n      <Switch>\n        <Route path=\"/\" exact>\n          <HomeView />\n        </Route>\n        <Route path=\"/users/signup\">\n          <SignUpView />\n        </Route>\n        <Route path=\"/users/login\">\n          <LoginView />\n        </Route>\n        <Route path=\"/contacts\">\n          <ContactsView />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    </>\n  )\n}\n\nexport default App\n","import { getDefaultMiddleware, configureStore } from '@reduxjs/toolkit'\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nimport authReducer from './auth/auth-slice'\nimport storage from 'redux-persist/lib/storage'\nimport logger from 'redux-logger'\nimport contactsReducer from './contacts/contacts-slice'\nimport thunk from 'redux-thunk'\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  thunk,\n]\nif (process.env.NODE_ENV === `development`) {\n  middleware.push(logger)\n}\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whiteList: ['token'],\n}\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV !== 'production',\n})\n\nexport const persistor = persistStore(store)\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { persistor } from './redux/store'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}